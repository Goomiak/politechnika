{
    "slides": {
      "direct_detection": [
        {
          "elements": [
            {
              "type": "text",
              "content": "Detekcja Bezpośrednia – detekcja polegająca wyłącznie na pomiarze mocy optycznej sygnału, bez uwzględniania informacji o fazie lub częstotliwości nośnej. "
            },
            {
              "type": "text",
              "content": "Sygnał optyczny E(t) trafia na fotodetektor (np. fotodiodę), która generuje prąd proporcjonalny do mocy optycznej P(t). Fotodetektor przekształca moc optyczną na prąd elektryczny na podstawie poniższych wzorów. "
            },
            {
              "type": "text",
              "content": "Moc optyczna:"
            },
            {
              "type": "math",
              "content": "$P(t) = |E(t)|^2$"
            },
            {
              "type": "text",
              "content": "Prąd fotodetektora:"
            },
            {
              "type": "math",
              "content": "$I(t) = R \\cdot P(t)$"
            },
            {
              "type": "text",
              "content": "gdzie R - responsywność fotodetektora"
            },
            {
              "type": "text",
              "content": "W sygnale elektrycznym mogą występować szybkie oscylacje związane z nośną, dlatego też w celu filtracji tych oscylacji stosuje się obwód RC. W ten sposób pozostaje użyteczna informacja o mocy sygnału."
            }
            
          ]
        },
        {
          "elements": [
            {"type": "text", "content": "W przypadku detekcji szerokopasmowej dochodzi do tzw. samomieszania. W przypadku sygnału dwuwstęgowego – detektor zmierzy całkowitą moc optyczną sygnału, co prowadzi do sumowania wstęg górnej i dolnej, przez co wypadkowy sygnał elektryczny przedstawi się wzorem:"},
            {"type": "math", "content": "$I(t) \\propto \\left| E_{\\text{USB}}(t) + E_{\\text{LSB}}(t) \\right|^2$"},
            {"type": "math", "content": "$gdzie: E_{\\text{USB}}(t) - \\text{pole elektryczne górnej wstęgi}$"},
            {"type": "text", "content": "Przy niskim próbkowaniu – wstęgi mogą nachodzić na siebie, co powoduje interferencje i zniekształcenie użytecznego sygnału. Detektor musi mieć pasmo wystarczające do uchwycenia obu wstęg, co zwiększa wymagania stawiane układowi odbiorczemu."},
            {"type": "text", "content": "Detekcja bezpośrednia nie odtwarza informacji o fazie ani częstotliwości sygnału optycznego, co uniemożliwia stosowanie zaawansowanych metod modulacji. Ograniczenia te wynikają z szumów termicznych, szumów prądowych na fotodiodzie oraz szumów kwantowych (związanych z fluktuacją liczby fotonów). Przy szerokopasmowych sygnałach (np. dwuwstęgowych) nakładanie się pasm prowadzi do zjawiska aliasingu i trudności w dekodowaniu informacji."}
          ]
        },
        {
          "elements": [
            {"type": "text", "content": "Detekcja bezpośrednia sygnałów optycznych polega na..."},
            {"type": "math", "content": "$P = I^2 R$"},
            {"type": "text", "content": "Detekcja bezpośrednia sygnałów optycznych polega na..."},
            {"type": "math", "content": "$P = I^2 R$"},
            {"type": "image", "content": "direct1.png"},
            {
              "type": "simulation",
              "content": {
                "name": "Symulacja detekcji bezpośredniej",
                "parameters": {
                  "amplitude": { "min": 0.1, "max": 10.0, "step": 0.1, "default": 1.0 },
                  "frequency": { "min": 1.0, "max": 50.0, "step": 0.5, "default": 10.0 }
                },
                "inputs": {
                  "offset": { "default": "0" }
                },
                "figures": [
                  {
                    "size": [8, 4],
                    "code": "t = np.linspace(0, 1, 1000); y = amplitude.get() * np.sin(2 * np.pi * frequency.get() * t + float(offset.get())); ax.plot(t, y)"
                  }
                ]
              }
            },
            {
              "type": "simulation",
              "content": {
                  "name": "Odbiór sygnału optycznego z detektorem fotonowym",
                  "parameters": {
                      "amplitude": { "min": 0.1, "max": 10.0, "step": 0.1, "default": 1.0 },
                      "noise_level": { "min": 0.0, "max": 1.0, "step": 0.1, "default": 0.1 }
                  },
                  "inputs": {},
                  "figures": [
                      {
                          "size": [8, 4],
                          "code": "t = np.linspace(0, 1, 1000); signal = amplitude.get() * np.sin(2 * np.pi * 10 * t); noise = np.random.normal(0, noise_level.get(), size=t.shape); detected_signal = np.abs(signal + noise); ax.plot(t, signal, label='Input Signal'); ax.plot(t, detected_signal, label='Detected Intensity'); ax.legend()"
                      }
                  ]
              }
           },
           {
            "type": "simulation",
            "content": {
                "name": "Demodulacja sygnału AM",
                "parameters": {
                    "modulation_index": { "min": 0.1, "max": 1.0, "step": 0.1, "default": 0.5 }
                },
                "inputs": {},
                "figures": [
                    {
                        "size": [8, 4],
                        "code": "t = np.linspace(0, 1, 1000); carrier = np.cos(2 * np.pi * 10 * t); mod_signal = 1 + modulation_index.get() * np.sin(2 * np.pi * 2 * t); am_signal = mod_signal * carrier; detected = np.abs(am_signal); ax.plot(t, am_signal, label='AM Signal'); ax.plot(t, detected, label='Envelope Detected'); ax.legend()"
                    }
                ]
            }
         }
          ]
        },
        {
          "elements": [
            {"type": "text", "content": "Detekcja bezpośrednia sygnałów optycznych polega na..."},
            {"type": "math", "content": "$P = I^2 R$"},
            {"type": "text", "content": "Detekcja bezpośrednia sygnałów optycznych polega na..."},
            {"type": "math", "content": "$P = I^2 R$"},
            {"type": "image", "content": "direct1.png"}
          ]
        },
      
        {
          "elements": [
            {"type": "math", "content": "$P = I^2 R$"},
            {"type": "text", "content": "Powyższy wzór pokazuje zależność mocy od natężenia prądu."}
          ]
        }
      ],
      "coherent_detection": [
        {
          "elements": [
            {"type": "text", "content": "Detekcja koherentna sygnałów optycznych polega na..."},
            {"type": "math", "content": "$P = I^2 R$"},
            {"type": "image", "content": "coherent1.png"}
          ]
        },
        {
          "elements": [
            {"type": "text", "content": "W detekcji koherentnej odbierany sygnał jest mieszany z..."},
            {"type": "math", "content": "$E(t) = E_0 e^{i(\\omega t + \\phi)}$"},
            {
              "type": "simulation",
              "content": {
                  "name": "Demodulacja sygnału FM",
                  "parameters": {
                      "modulation_index": { "min": 0.1, "max": 10.0, "step": 0.1, "default": 1.0 }
                  },
                  "inputs": {},
                  "figures": [
                      {
                          "size": [8, 4],
                          "code": "t = np.linspace(0, 1, 1000); signal = np.sin(2 * np.pi * 5 * t + modulation_index.get() * np.sin(2 * np.pi * 1 * t)); demodulated = np.gradient(np.unwrap(np.angle(np.exp(1j * signal)))); ax.plot(t, signal, label='FM Signal'); ax.plot(t, demodulated, label='Demodulated Signal'); ax.legend()"
                      }
                  ]
              }
          }
          ]
        }
      ],
      "summary": [
        {
          "elements": [
            {"type": "text", "content": "Detekcja koherentna sygnałów optycznych polega na..."},
            {"type": "math", "content": "$P = I^2 R$"},
            {"type": "image", "content": "coherent1.png"},
            {
              "type": "simulation",
              "content": {
                  "name": "Porównanie detekcji",
                  "parameters": {
                      "snr": { "min": 0, "max": 20, "step": 1, "default": 10 }
                  },
                  "inputs": {},
                  "figures": [
                      {
                          "size": [8, 4],
                          "code": "t = np.linspace(0, 1, 1000); signal = np.sin(2 * np.pi * 5 * t); noise = np.random.normal(0, 10**(-snr.get()/20), size=t.shape); direct = np.abs(signal + noise); coherent = signal + noise; ax.plot(t, direct, label='Direct Detection'); ax.plot(t, coherent, label='Coherent Detection'); ax.legend()"
                      }
                  ]
              }
            }
          ]
        },
        {
          "elements": [
            {"type": "text", "content": "W detekcji koherentnej odbierany sygnał jest mieszany z..."},
            {"type": "math", "content": "$E(t) = E_0 e^{i(\\omega t + \\phi)}$"}
          ]
        }
      ]
    }
  }
  